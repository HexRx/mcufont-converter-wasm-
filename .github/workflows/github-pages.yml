name: Deploy to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  BUILD_TYPE: Release

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: CMake build WebAssembly using Emscripten docker image
        uses: addnab/docker-run-action@v3
        with:
          image: emscripten/emsdk:3.1.64
          options: -v ${{ github.workspace }}:/src -w /src/build
          run: |
            emcmake cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ..
            emmake make -j4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'
          cache-dependency-path: './web/package-lock.json'
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .node_modules
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nodejs-${{ hashFiles('./web/**/package-lock.json') }}-${{ hashFiles('./web/**.[jt]s', './web/**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nodejs-${{ hashFiles('./web/**/package-lock.json') }}-
      - name: Install dependencies
        working-directory: ${{github.workspace}}/web
        run: npm i
      - name: Build Preact
        working-directory: ${{github.workspace}}/web
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./web/dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
